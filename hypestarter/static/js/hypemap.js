// Generated by CoffeeScript 1.4.0
(function() {
  var add_point, create_map, get_and_map_locations, height, map, map_location, map_states, projection, width;

  width = 960;

  height = 500;

  get_and_map_locations = function(map, projection) {
    return d3.json(STATIC_URL + 'locations.json', function(locations) {
      var callback, i, location, _i, _len, _results;
      i = 0;
      _results = [];
      for (_i = 0, _len = locations.length; _i < _len; _i++) {
        location = locations[_i];
        i++;
        callback = function(current_location) {
          return function() {
            return map_location(current_location, map, projection);
          };
        };
        _results.push(setTimeout(callback(location), i * 2000));
      }
      return _results;
    });
  };

  create_map = function() {
    var map;
    map = d3.select("#hypemap").append("svg").attr("width", 960).attr("height", 500);
    return map;
  };

  map_states = function(map, projection) {
    var path;
    path = d3.geo.path().projection(projection);
    d3.json(STATIC_URL + 'us-states.json', function(collection) {
      return map.selectAll('path').data(collection.features).enter().append('path').attr('d', path);
    });
    return map;
  };

  map_location = function(location, map, projection) {
    var coordinates;
    coordinates = projection([location[1], location[0]]);
    console.debug(coordinates);
    if (coordinates[0] < 5 || coordinates[0] > (width - 5) || coordinates[1] < 5 || coordinates[1] > (width - 5)) {
      return;
    }
    return add_point(map, coordinates);
  };

  add_point = function(map, coordinates) {
    var rad;
    rad = 8;
    map.append('svg:circle').style("stroke", "rgba(255,49,49,.7)").style("stroke-width", 1).style("fill", "rgba(0,0,0,0)").attr('cx', coordinates[0]).attr('cy', coordinates[1]).attr('r', 5).transition().delay(0).duration(3000).attr("r", 60).style("stroke-width", 2).style("stroke", "rgba(255,49,49,0.0001)").transition().duration(3000).remove();
    return map.append('svg:circle').attr("class", "point").style("stroke", "rgba(255,49,49,.7)").style("stroke-width", 1).style("fill", "rgba(240,49,49,1)").attr('cx', coordinates[0]).attr('cy', coordinates[1]).attr('r', rad).transition().duration(5000).attr("r", 0.0001).remove();
  };

  map = create_map();

  projection = d3.geo.albers();

  map = map_states(map, projection);

  get_and_map_locations(map, projection);

}).call(this);
